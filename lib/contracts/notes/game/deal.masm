# Try to code an easy note script

use.miden::account
use.miden::note
use.miden::contracts::wallets::basic->wallet
use.miden::contracts::poker::poker

proc.receive_cards
    call.account::set_item

    # prepare stack for return
    movup.4 drop movup.4 drop movup.4 drop
end


begin
    # All scripts start with the NOTE_SCRIPT_ROOT, you can drop it
    dropw 
    
    push.0 exec.note::get_inputs 
    # it saves first word at zero and the continues the second word at 1 
    # => [num_inputs, des_pointer, ...]

    # dup push.8 eq assert (just for debugging purposes)
    # => [des_pointer = 0, ...]

    push.0
    # since now the word is at position 0 and 1 for loading the first word we will push zero and then load the word      
    mem_loadw push.100 exec.receive_cards # using call we are storing the cards in memory of the account context

    push.1
    # since now the word is at position 0 and 1 for loading the first word we will push one and then load the word 
    mem_loadw push.101 exec.receive_cards

    # Debugging https://0xpolygonmiden.github.io/miden-vm/user_docs/assembly/debugging.html
    debug.stack # log the entire stack content
    
    # All account and note procedures
    # https://0xpolygonmiden.github.io/miden-base/transactions/transaction-procedures.html#transaction-procedures 
    
    push.0 exec.note::get_assets drop mem_loadw
    # => [ASSET, ...]

    # load the asset and add it to the account
    call.wallet::receive_asset
    # => [...]

    dropw
end